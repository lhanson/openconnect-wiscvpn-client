#!/usr/bin/env bash

usage() {
	echo "Usage: $0 [args] [config_file_path]"
	echo "[config_file_path] defaults to \"$(default_config_path)\""
	echo
	echo "Split tunnelling arguments"
	echo "	--split		    Enable split tunneling using well-known DoIT IP ranges"
	echo "	--no-host-names Do not add either short or long hostnames to /etc/hosts"
	echo "	--no-ns-hosts   Do not add nameserver aliases to /etc/hosts (default is to name them dns0.tun0, etc.)"
}

default_config_path() {
	if [ -z "$XDG_CONFIG_HOME" ]; then
		echo "$HOME/.config/vpn/config"
	else
		echo "$XDG_CONFIG_HOME/vpn/config"
	fi
}

main() {
	local config_file
	local split_tunnel="false"
	local no_host_names="false"
	local no_ns_hosts="false"

	if [[ $EUID -ne 0 ]]; then
		echo "This script must be run as root, use sudo \"$0\" instead" 1>&2
		exit 1
	fi

	# Parse input
	if [[ $# -gt 4 ]]; then
		usage
		exit 2
	else
		# Parse arguments
		for arg in "$@"
		do
			if [[ "$arg" == "--split" ]]; then
				split_tunnel="true"
			elif [[ "$arg" == "--no-host-names" ]]; then
				no_host_names="true"
			elif [[ "$arg" == "--no-ns-hosts" ]]; then
				no_ns_hosts="true"
			else
				config_file="$arg"
			fi
		done

		# Use default config file path if unspecified
		config_file=${config_file:-$(default_config_path)}

		# Check for vpn-slice if necessary
		command -v "vpn-slice" >/dev/null 2>&1
		if [[ $? -ne 0 && "$split_tunnel" == "true" ]]; then
			echo "Error: vpn-slice is required for split tunneling, install and try again"
			echo "https://github.com/dlenski/vpn-slice"
			exit 4
		fi
	fi

	# shellcheck source=./config.sample
	source "$config_file"

	if [[ "$split_tunnel" == "true" ]]; then
		# Common DoIT Subnets https://kb.wisc.edu/ns/page.php?id=3988
		subnets=(
			72.33.0.0/16
			144.92.0.0/16
			128.104.0.0/16
			128.105.0.0/16
			146.151.0.0/17
			146.151.128.0/17
			198.133.224.0/24
			198.133.225.0/24
			198.51.254.0/24
		)
		extra_args=""
		if [[ "$no_host_names" == "true" ]]; then
			extra_args="${extra_args} --no-host-names"
		fi
		if [[ "$no_ns_hosts" == "true" ]]; then
			extra_args="${extra_args} --no-ns-hosts"
		fi
		script="vpn-slice ${extra_args} --domains-vpn-dns wisc.edu ${subnets[*]}"
	fi

	echo "Script to run: '${script}'"
	echo
	echo "Press [CTRL+C] to stop.."

	(echo "${password:?}"; echo 1) | openconnect \
		--user="${user:?}" \
		--usergroup=gateway \
		--passwd-on-stdin \
		--prot=gp \
		--csd-wrapper "${hipreport:?}" \
		--script="${script}" \
		uwmadison.vpn.wisc.edu
}

main "$@"
